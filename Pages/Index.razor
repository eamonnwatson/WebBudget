@page "/"
@inject BudgetService service;

<PageTitle>Index</PageTitle>

<MudCard Elevation="10" Class="mud-info" Style="color:#fff;">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h2">Budget</MudText>
            <MudText Typo="Typo.h4">@DateTime.Today.ToString("dddd MMMM dd, yyyy")</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent style="background-color:var(--mud-palette-info-darken);">
        <MudText Typo="Typo.h1" Align="Align.Right"><b>@data.CurrentBalance.ToString("C2")</b></MudText>
    </MudCardContent>
</MudCard>

<MudTable Items="@data.TransactionSummary" Elevation="10" Class="mt-10">
    <RowTemplate>
        <MudTd>@context.Description</MudTd>
        <MudTd Style="@GetClass(context.Amount)">@context.Amount.ToString("C2")</MudTd>
        <MudTd Style="text-align:right;">@context.Date.ToString("MMM dd")</MudTd>
    </RowTemplate>
</MudTable>

<MudTable Items="@data.TransactionList" Elevation="10" Class="mt-10" RowClassFunc="TableClassFunction" Dense="true" RowsPerPage="25" CurrentPage="@currPage">
    <HeaderContent>
        <MudTh>Date</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>Amount</MudTh>
        <MudTh>Balance</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>@context.Date.ToString("yyyy-MM-dd")</MudTd>
        <MudTd>@context.Description</MudTd>
        <MudTd Style="@GetClass(context.Amount)">@context.Amount.ToString("C2")</MudTd>
        <MudTd Style="@GetClass(context.Balance)">@context.Balance.ToString("C2")</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<div Class="d-flex justify-end my-10">
    <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Edit" Href="/Edit">Add/Edit</MudButton>
</div>

@code{

    private BudgetVM data = new BudgetVM();
    int currPage = 0;

    protected override async Task OnInitializedAsync()
    {
        data = await service.GetData();

        var currBalanceItem = data.TransactionList.First(t => t.Description == "Current Balance");
        currPage = data.TransactionList.IndexOf(currBalanceItem) / 25;

    }

    private string GetClass(decimal amount)
    {
        var output = "text-align:right;";

        if (amount < 0)
            output += "color:var(--mud-palette-error);";

        return output;
    }

    private string TableClassFunction(TransactionVM txn, int index)
    {
        if (txn.Description.Equals("Current Balance"))
            return "mud-theme-success";

        return string.Empty;
    }
}